generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model Drop {
  id               Int       @id @default(autoincrement())
  // Drop data
  name             String
  description      String?
  path             String    @unique
  schema           String
  subjectData      String
  startTime        DateTime?
  endTime          DateTime?
  visible          Boolean?
  limit            Int?
  image            String?
  createdAt        DateTime  @default(now())
  gated            Boolean?
  // Metadata
  // Used to verify + update drop data
  signature        String
  createdByAddress String
  // Relations
  createdByUser    User      @relation(fields: [createdByAddress], references: [address])
  claims           Claim[]
}

model User {
  id      Int     @id @default(autoincrement())
  address String  @unique
  name    String?
  bio     String?
  claims  Claim[]
  drops   Drop[]
}

model Claim {
  id      Int     @id @default(autoincrement())
  dropId  Int
  claimed Boolean @default(false)
  address String
  drop    Drop    @relation(fields: [dropId], references: [id])
  user    User    @relation(fields: [address], references: [address])

  @@unique([dropId, address])
}
